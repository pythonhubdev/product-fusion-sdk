[tool.poetry]
name = "product-fusion-backend"
version = "0.1.0"
description = "This application provides a robust authentication and organization management system for a multi-tenant SaaS platform. It offers user authentication, organization creation, member management, and role-based access control, along with statistical insights and email notifications for key user actions."
authors = ["Vetrichelvan <pythonhubdev@gmail.com>"]
readme = "README.md"
packages = [
    { include = "product_fusion_backend" }
]

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.112.0"
hypercorn = "^0.17.3"
opentelemetry-api = "^1.26.0"
opentelemetry-sdk = "^1.26.0"
opentelemetry-exporter-otlp = "^1.26.0"
opentelemetry-instrumentation = "^0.47b0"
opentelemetry-instrumentation-fastapi = "^0.47b0"
opentelemetry-instrumentation-sqlalchemy = "^0.47b0"
orjson = "^3.10.5"
pydantic = {extras = ["email"], version = "^2.8.2"}
pydantic-settings = "^2.4.0"
loguru = "^0.7.2"
granian = "^1.5.2"
alembic = "^1.13.2"
sqlalchemy = "^2.0.32"
asyncpg = "^0.29.0"
greenlet = "^3.0.3"
authlib = "^1.3.1"
bcrypt = "^4.2.0"


[tool.poetry.group.development.dependencies]
pre-commit = "^3.7.1"
black = { extras = ["d"], version = "^24.4.2" }
pytest = "^8.2.2"
ruff = "^0.5.2"
pytest-cov = "^5.0.0"
isort = "^5.13.2"
mypy = "^1.10.1"
pytest-env = "^1.1.3"

[tool.black]
line-length = 120
preview = true

[tool.ruff]
src = ["."]
target-version = "py312"
fix = true
output-format = "full"
line-length = 120

[tool.ruff.lint]
select = ["E", "F", "N801", "N802", "N803", "N805", "N806", "Q0"]
ignore = ["F401"]

[tool.ruff.lint.flake8-quotes]
inline-quotes = "double"
multiline-quotes = "double"
docstring-quotes = "double"

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.flake8-type-checking]
strict = true

[tool.ruff.lint.isort]
combine-as-imports = true
force-single-line = false
force-wrap-aliases = true
split-on-trailing-comma = true

[tool.isort]
profile = "black"
multi_line_output = 3
src_paths = ["product_fusion_backend"]
line_length = 120
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
strict = true
ignore_missing_imports = true
allow_subclassing_any = true
allow_untyped_calls = true
pretty = true
show_error_codes = true
implicit_reexport = true
allow_untyped_decorators = true
warn_unused_ignores = false
warn_return_any = false
namespace_packages = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
